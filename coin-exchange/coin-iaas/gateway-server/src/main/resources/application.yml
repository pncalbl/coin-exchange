server:
  port: 80

spring:
  application:
    name: gateway-server
  cloud:
    nacos:
      discovery:
        server-addr: nacos-server:8848 # 修改本机的 host 文件即可
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true # 开启小驼峰规则
      routes:
        - id: admin-service_router
          uri: lb://admin-service # 转发到那个目的地
          predicates:
            - Path=/admin/**
        - id: test_router
          uri: https://www.aliyun.com
          predicates:
            - Path=/product
    # 通过网关来完成对两种维度的限流: 网关维度 + API 分组
    sentinel:
      filter:
        enabled: false
      transport:
        port: 8719
        dashboard: sentinel-server:8858
      datasource:
#        ds1.file:
#          file: classpath:gw-flow.json  # 网关 + API 分组的限流
#          ruleType: gw_flow
        # com.alibaba.csp.sentinel.datasource.nacos.NacosDataSource
        # 使用 Nacos 持久化时我们的 sentinel 数据时, 需要添加 nacos-datasource 的依赖
        ds1.nacos:
          serverAddr: nacos-server:8848
          dataId: gw-flow
          ruleType: gw_flow

#        ds2.file:
#          file: classpath:api-group.json
#          ruleType: gw_api_group
        ds2.nacos:
          serverAddr: nacos-server:8848
          dataId: api-group
          ruleType: gw_api_group

# 我们演示了 sentinel-dashboard 的规则定义, 而且规则定义好了后, 我们网关能立马感知到(实时生效)
# 而 Nacos 无法感知, 只要重启 sentinel-dashboard, 就会丢失现有规则, 必须手动在 Nacos 页面, 持久化.

  redis:
    password: pncalbl123
    host: redis-server
    port: 6380